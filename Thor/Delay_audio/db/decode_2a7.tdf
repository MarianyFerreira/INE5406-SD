--lpm_decode DEVICE_FAMILY="Cyclone IV E" LPM_DECODES=16 LPM_WIDTH=4 data enable eq
--VERSION_BEGIN 12.0 cbx_cycloneii 2012:05:31:20:08:35:SJ cbx_lpm_add_sub 2012:05:31:20:08:35:SJ cbx_lpm_compare 2012:05:31:20:08:35:SJ cbx_lpm_decode 2012:05:31:20:08:35:SJ cbx_mgl 2012:05:31:20:09:47:SJ cbx_stratix 2012:05:31:20:08:35:SJ cbx_stratixii 2012:05:31:20:08:35:SJ  VERSION_END


-- Copyright (C) 1991-2012 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.



--synthesis_resources = lut 18 
SUBDESIGN decode_2a7
( 
	data[3..0]	:	input;
	enable	:	input;
	eq[15..0]	:	output;
) 
VARIABLE 
	data_wire[3..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[15..0]	: WIRE;
	eq_wire[15..0]	: WIRE;
	w_anode3700w[1..0]	: WIRE;
	w_anode3709w[3..0]	: WIRE;
	w_anode3726w[3..0]	: WIRE;
	w_anode3736w[3..0]	: WIRE;
	w_anode3746w[3..0]	: WIRE;
	w_anode3756w[3..0]	: WIRE;
	w_anode3766w[3..0]	: WIRE;
	w_anode3776w[3..0]	: WIRE;
	w_anode3786w[3..0]	: WIRE;
	w_anode3798w[1..0]	: WIRE;
	w_anode3805w[3..0]	: WIRE;
	w_anode3816w[3..0]	: WIRE;
	w_anode3826w[3..0]	: WIRE;
	w_anode3836w[3..0]	: WIRE;
	w_anode3846w[3..0]	: WIRE;
	w_anode3856w[3..0]	: WIRE;
	w_anode3866w[3..0]	: WIRE;
	w_anode3876w[3..0]	: WIRE;
	w_data3698w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[15..0] = eq_wire[15..0];
	eq_wire[] = ( ( w_anode3876w[3..3], w_anode3866w[3..3], w_anode3856w[3..3], w_anode3846w[3..3], w_anode3836w[3..3], w_anode3826w[3..3], w_anode3816w[3..3], w_anode3805w[3..3]), ( w_anode3786w[3..3], w_anode3776w[3..3], w_anode3766w[3..3], w_anode3756w[3..3], w_anode3746w[3..3], w_anode3736w[3..3], w_anode3726w[3..3], w_anode3709w[3..3]));
	w_anode3700w[] = ( (w_anode3700w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode3709w[] = ( (w_anode3709w[2..2] & (! w_data3698w[2..2])), (w_anode3709w[1..1] & (! w_data3698w[1..1])), (w_anode3709w[0..0] & (! w_data3698w[0..0])), w_anode3700w[1..1]);
	w_anode3726w[] = ( (w_anode3726w[2..2] & (! w_data3698w[2..2])), (w_anode3726w[1..1] & (! w_data3698w[1..1])), (w_anode3726w[0..0] & w_data3698w[0..0]), w_anode3700w[1..1]);
	w_anode3736w[] = ( (w_anode3736w[2..2] & (! w_data3698w[2..2])), (w_anode3736w[1..1] & w_data3698w[1..1]), (w_anode3736w[0..0] & (! w_data3698w[0..0])), w_anode3700w[1..1]);
	w_anode3746w[] = ( (w_anode3746w[2..2] & (! w_data3698w[2..2])), (w_anode3746w[1..1] & w_data3698w[1..1]), (w_anode3746w[0..0] & w_data3698w[0..0]), w_anode3700w[1..1]);
	w_anode3756w[] = ( (w_anode3756w[2..2] & w_data3698w[2..2]), (w_anode3756w[1..1] & (! w_data3698w[1..1])), (w_anode3756w[0..0] & (! w_data3698w[0..0])), w_anode3700w[1..1]);
	w_anode3766w[] = ( (w_anode3766w[2..2] & w_data3698w[2..2]), (w_anode3766w[1..1] & (! w_data3698w[1..1])), (w_anode3766w[0..0] & w_data3698w[0..0]), w_anode3700w[1..1]);
	w_anode3776w[] = ( (w_anode3776w[2..2] & w_data3698w[2..2]), (w_anode3776w[1..1] & w_data3698w[1..1]), (w_anode3776w[0..0] & (! w_data3698w[0..0])), w_anode3700w[1..1]);
	w_anode3786w[] = ( (w_anode3786w[2..2] & w_data3698w[2..2]), (w_anode3786w[1..1] & w_data3698w[1..1]), (w_anode3786w[0..0] & w_data3698w[0..0]), w_anode3700w[1..1]);
	w_anode3798w[] = ( (w_anode3798w[0..0] & data_wire[3..3]), enable_wire);
	w_anode3805w[] = ( (w_anode3805w[2..2] & (! w_data3698w[2..2])), (w_anode3805w[1..1] & (! w_data3698w[1..1])), (w_anode3805w[0..0] & (! w_data3698w[0..0])), w_anode3798w[1..1]);
	w_anode3816w[] = ( (w_anode3816w[2..2] & (! w_data3698w[2..2])), (w_anode3816w[1..1] & (! w_data3698w[1..1])), (w_anode3816w[0..0] & w_data3698w[0..0]), w_anode3798w[1..1]);
	w_anode3826w[] = ( (w_anode3826w[2..2] & (! w_data3698w[2..2])), (w_anode3826w[1..1] & w_data3698w[1..1]), (w_anode3826w[0..0] & (! w_data3698w[0..0])), w_anode3798w[1..1]);
	w_anode3836w[] = ( (w_anode3836w[2..2] & (! w_data3698w[2..2])), (w_anode3836w[1..1] & w_data3698w[1..1]), (w_anode3836w[0..0] & w_data3698w[0..0]), w_anode3798w[1..1]);
	w_anode3846w[] = ( (w_anode3846w[2..2] & w_data3698w[2..2]), (w_anode3846w[1..1] & (! w_data3698w[1..1])), (w_anode3846w[0..0] & (! w_data3698w[0..0])), w_anode3798w[1..1]);
	w_anode3856w[] = ( (w_anode3856w[2..2] & w_data3698w[2..2]), (w_anode3856w[1..1] & (! w_data3698w[1..1])), (w_anode3856w[0..0] & w_data3698w[0..0]), w_anode3798w[1..1]);
	w_anode3866w[] = ( (w_anode3866w[2..2] & w_data3698w[2..2]), (w_anode3866w[1..1] & w_data3698w[1..1]), (w_anode3866w[0..0] & (! w_data3698w[0..0])), w_anode3798w[1..1]);
	w_anode3876w[] = ( (w_anode3876w[2..2] & w_data3698w[2..2]), (w_anode3876w[1..1] & w_data3698w[1..1]), (w_anode3876w[0..0] & w_data3698w[0..0]), w_anode3798w[1..1]);
	w_data3698w[2..0] = data_wire[2..0];
END;
--VALID FILE
